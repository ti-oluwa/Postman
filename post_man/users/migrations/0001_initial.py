# Generated by Django 4.1 on 2022-10-08 15:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('user_idno', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='User ID')),
                ('username', models.CharField(max_length=60, unique=True)),
                ('secret_question', models.CharField(blank=True, editable=False, help_text='This is a secret question that you can use to reset your password if you forget it.', max_length=500, null=True, verbose_name='Secret Question')),
                ('secret_ans', models.CharField(blank=True, editable=False, help_text='This is a secret answer to your secret question', max_length=500, null=True, verbose_name='Secret Answer')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('can_use_default', models.BooleanField(default=False)),
                ('can_send', models.BooleanField(default=False)),
                ('message_credit', models.IntegerField(blank=True, default=0, null=True)),
                ('wants_history', models.BooleanField(default=True)),
                ('wants_random', models.BooleanField(default=False)),
                ('wants_default', models.BooleanField(default=True)),
                ('accepted_cookies', models.BooleanField(default=False)),
                ('rejected_cookies', models.BooleanField(default=False)),
                ('accepted_pp', models.BooleanField(default=False)),
                ('is_privileged', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', users.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CreditPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0, unique=True, verbose_name='Credit amount')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=50, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['amount'],
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount Purchased')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=50, verbose_name='Price')),
                ('sid', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Purchase ID')),
                ('charge_id', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Coinbase charge ID')),
                ('order_code', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Coinbase order code')),
                ('is_closed', models.BooleanField(default=False)),
                ('success', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_closed', models.DateTimeField(blank=True, default=None, null=True)),
                ('credit_packages', models.ManyToManyField(related_name='purchases', to='users.creditpackage', verbose_name='credit packages')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='purchases', to=settings.AUTH_USER_MODEL, verbose_name='made by')),
            ],
            options={
                'ordering': ['-date_created', '-date_closed'],
            },
        ),
        migrations.CreateModel(
            name='MessageProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(max_length=20, region=None, verbose_name='Profile Number')),
                ('api_key', models.CharField(default=None, max_length=500, verbose_name='API Key')),
                ('api_provider', models.CharField(choices=[('telnyx', 'Telnyx'), ('twilio', 'Twilio')], max_length=50, null=True, verbose_name='API Provider')),
                ('account_sid', models.CharField(blank=True, default=None, max_length=500, null=True, verbose_name='Account SID')),
                ('is_active', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('owned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_profiles', to=settings.AUTH_USER_MODEL, verbose_name='profile owner')),
            ],
            options={
                'ordering': ['-date_added'],
                'unique_together': {('number', 'owned_by')},
            },
        ),
        migrations.CreateModel(
            name='EmailProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=200, verbose_name='Profile Email')),
                ('app_pass', models.CharField(max_length=500, verbose_name='App Password')),
                ('host', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Email host')),
                ('port', models.IntegerField(blank=True, default=465, null=True, verbose_name='Email port')),
                ('use_tls', models.BooleanField(default=True, verbose_name='Use TLS')),
                ('use_ssl', models.BooleanField(default=False, verbose_name='Use SSL')),
                ('type', models.CharField(blank=True, choices=[('Gmail', 'Gmail'), ('Yahoo', 'Yahoo'), ('Outlook', 'Outlook'), ('Protonmail', 'Protonmail'), ('AOL', 'AOL'), ('Virgin Media', 'Virgin Media'), ('AT&T', 'AT&T'), ('Verizon', 'Verizon')], default='Gmail', max_length=50, null=True, verbose_name='Email type')),
                ('is_active', models.BooleanField(default=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('owned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_profiles', to=settings.AUTH_USER_MODEL, verbose_name='profile owner')),
            ],
            options={
                'ordering': ['-date_added'],
                'unique_together': {('email', 'owned_by')},
            },
        ),
    ]
